name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub (or AWS ECR)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t your-dockerhub-username/user-service .
          docker tag your-dockerhub-username/user-service:latest your-dockerhub-username/user-service:latest
          docker push your-dockerhub-username/user-service:latest

      # Deploy to AWS EC2
      - name: Deploy to AWS EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ec2-user@${{ secrets.EC2_HOST }} << EOF
            docker pull your-dockerhub-username/user-service:latest
            docker stop user-service || true
            docker rm user-service || true
            docker run -d --name user-service -p 8080:8080 \
              -e SPRING_DATASOURCE_URL=jdbc:postgresql://${{ secrets.POSTGRES_HOST }}:5432/user_service \
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.POSTGRES_USERNAME }} \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
              -e SPRING_REDIS_HOST=${{ secrets.REDIS_HOST }} \
              -e SPRING_REDIS_PORT=6379 \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              your-dockerhub-username/user-service:latest
          EOF